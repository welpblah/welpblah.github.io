#!/bin/sh

domain="bz.srht.site"
alias sed=gsed
alias date=gdate

set -u
MARKDOWN=smu
IFS='	'

index_tsv() {
    [ -d "$1" ] || return 0
    for f in "$1"/*.md; do
        [ -f "$f" ] || continue
        title=$(sed -n '/^# /{s/# //p; q}' "$f")
        if [ "$1" = "posts" ]; then
            raw_date=$(sed -n '3p' "$f" | tr -d '\n')
            created=$(date -d "$raw_date" "+%B %d, %Y" 2>/dev/null) || created="Invalid Date"
            printf '%s\t%s\t%s\t%s\n' "$f" "${title:="No Title"}" "$created" "$raw_date"
        else
            printf '%s\t%s\n' "$f" "${title:="No Title"}"
        fi
    done
}

index_html() {
    sed "s/{{TITLE}}/$(sed -n '/^# /{s/# //p; q}' index.md 2>/dev/null || echo 'Index')/" header.html
    [ -f index.md ] && $MARKDOWN index.md
    echo "<ul>"
    while read -r f title created _; do
        echo "<li><span class=\"toc\">$created</span> <br> <a href=\"$(echo "$f" | sed -E 's|.*/(.*).md|\1/|')\">$title</a></li>"
    done < "$1"
    echo "</ul>"
    cat footer.html
}

generate_feed() {
    feed_type=$1
    first_commit_date=$(git log --pretty='format:%ai' . | cut -d ' ' -f1 | tail -1 2>/dev/null || echo "2023-01-01")
    [ "$feed_type" = "atom" ] && echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<feed xmlns=\"http://www.w3.org/2005/Atom\">
    <title>$(sed -n '/^# /{s/# //p; q}' index.md 2>/dev/null || echo 'Blog')</title>
    <link href=\"$domain/atom.xml\" rel=\"self\" />
    <updated>$(date +%FT%TZ)</updated>
    <author><name>$(git config user.name 2>/dev/null || echo "Anonymous")</name></author>
    <id>$domain,$first_commit_date:default-atom-feed/</id>"
    [ "$feed_type" = "rss" ] && echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<rss version=\"2.0\"><channel>
    <title>$(sed -n '/^# /{s/# //p; q}' index.md 2>/dev/null || echo 'Blog')</title>
    <link>$domain/rss.xml</link>
    <description>Feed description here</description>
    <lastBuildDate>$(date -u +"%a, %d %b %Y %H:%M:%S %z")</lastBuildDate>
    <pubDate>$(date -u +"%a, %d %b %Y %H:%M:%S %z")</pubDate>
    <generator>Custom RSS Generator</generator>
    <ttl>1800</ttl>"
    while IFS=$'\t' read -r f title created raw_date; do
        [ -f "$f" ] || continue
        content=$($MARKDOWN "$f" | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g; s/"/\&quot;/g; s/'"'"'/\&#39;/g')
        post_link=$(echo "$f" | sed -E 's|posts/(.*).md|\1|')
        published_date=$(date -d "$raw_date" -u +"%Y-%m-%dT%H:%M:%SZ" 2>/dev/null) || published_date=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        [ "$feed_type" = "atom" ] && echo "    <entry>
        <title>$title</title>
        <content type=\"html\">$content</content>
        <link href=\"$domain/$post_link\"/>
        <id>$domain/$post_link</id>
        <updated>$published_date</updated>
        <published>$published_date</published>
    </entry>"
        [ "$feed_type" = "rss" ] && echo "        <item>
            <title>$title</title>
            <description>$content</description>
            <link>$domain/$post_link</link>
            <guid isPermaLink=\"false\">$domain/$post_link</guid>
            <pubDate>$(date -d "$raw_date" -u +"%a, %d %b %Y %H:%M:%S %z" 2>/dev/null || date -u +"%a, %d %b %Y %H:%M:%S %z")</pubDate>
        </item>"
    done < "$2"
    [ "$feed_type" = "atom" ] && echo '</feed>'
    [ "$feed_type" = "rss" ] && echo '    </channel>
</rss>'
}

write_page() {
    directory=$(echo $(basename "$1" .md))
    mkdir -p build/$directory
    target=$(echo "$1" | sed -r 's|\w+/(.*).md|build/\1/index.html|')
    (
        sed "s/{{TITLE}}/$2/" header.html
        echo "<h1>$2</h1>"
        [ -n "$3" ] && echo "<p class=\"post-date\">$3</p>"
        sed "$([ -n "$4" ] && echo '1,3d' || echo '1d')" "$1" | $MARKDOWN
        cat footer.html
    ) > "$target"
}

rm -rf build && mkdir build

index_tsv posts | awk -F'\t' '{split($4,d,"-"); printf "%s%02d%02d\t%s\n", d[1], d[2], d[3], $0}' | sort -r -n | cut -f2- > build/posts.tsv
[ -s build/posts.tsv ] && {
    index_html build/posts.tsv > build/index.html
    generate_feed atom build/posts.tsv > build/atom.xml
    generate_feed rss build/posts.tsv > build/rss.xml
    while IFS=$'\t' read -r f title created raw_date; do
        [ -f "$f" ] && write_page "$f" "$title" "$created" "$raw_date"
    done < build/posts.tsv
}

index_tsv pages > build/pages.tsv
[ -s build/pages.tsv ] && {
    while read -r f title; do
        [ -f "$f" ] && write_page "$f" "$title" "" ""
    done < build/pages.tsv
}